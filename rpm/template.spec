%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/noetic/.*$
%global __requires_exclude_from ^/opt/ros/noetic/.*$

Name:           ros-noetic-geometry
Version:        1.13.2
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS geometry package

License:        BSD
URL:            http://www.ros.org/wiki/geometry
Source0:        %{name}-%{version}.tar.gz

BuildArch:      noarch

Requires:       ros-noetic-angles
Requires:       ros-noetic-eigen-conversions
Requires:       ros-noetic-kdl-conversions
Requires:       ros-noetic-tf
Requires:       ros-noetic-tf-conversions
BuildRequires:  ros-noetic-catkin
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
A metapackage for geometry library suite. Migration: Since ROS Hydro, tf has
been &quot;deprecated&quot; in favor of tf2. tf2 is an iteration on tf providing
generally the same feature set more efficiently. As well as adding a few new
features. As tf2 is a major change the tf API has been maintained in its current
form. Since tf2 has a superset of the tf features with a subset of the
dependencies the tf implementation has been removed and replaced with calls to
tf2 under the hood. This will mean that all users will be compatible with tf2.
It is recommended for new work to use tf2 directly as it has a cleaner
interface. However tf will continue to be supported for through at least J
Turtle.

%prep
%autosetup

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_LIBDIR="lib" \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/noetic" \
    -DCMAKE_PREFIX_PATH="/opt/ros/noetic" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
    -DCATKIN_BUILD_BINARY_PACKAGE="1" \
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi
%make_install -C obj-%{_target_platform}

%files
/opt/ros/noetic

%changelog
* Mon Jun 08 2020 Tully Foote <tfoote@osrfoundation.org> - 1.13.2-1
- Autogenerated by Bloom

* Fri May 15 2020 Tully Foote <tfoote@osrfoundation.org> - 1.13.1-1
- Autogenerated by Bloom

